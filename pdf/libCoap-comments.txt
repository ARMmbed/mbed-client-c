Comments on NSDL-C (Based on SVN checkout from NanoServiceDeviceLibrary on 16.4.2012) 

Zach Shelby


Minimal requirements for NSDL-C package release for NanoService Release 1.4

- x86 Linux GCC library port
- MSP430 IAR library port
- Cortex GCC library port (if time)
- libCoap basic build and parse support
- libCoap with coap-09, link-format-11, observe-04, block-08 compatibility
- libCoap verified against Sensinode ETSI Plugtest v0.6 test suite
- libCoap packet retransmission support
- libCoap simple RD registration helper functions 
- ETSI Plugtest server
- ETSI Plugtest client (for internal testing)
- Examples implementations
	- Connected Home example node (x86 Linux)
	- Street Lighting example node (x86 Linux)
	- NanoStack example node (MSP430)
- libCoap and example documentation
- Standard (no libCoap source code) and Enterprise (libCoap source code) release versions


Structural comments

There is way too much functionality and complexity in the current NanoServiceDeviceLibrary project. Most of this is just not necessary 
for NSDL-C. Things that should be removed for this release:

- GSR-ASL
- NSDL-ASL
- SE20, HTTP, XML are only SE2 specific, not to be included in NSDL-C release

I attempted to make use of NSDL-ASL and GSR-ASL in some real CoAP x86 Linux applications, and it is a total mess. There are constant and 
serious memory faults and the functionality is not really useful for a CoAP application developer. It is easier and requires less code 
to simply use libCoap directly without the ASL overhead.

Recommendation: Keep the GSR structure for SE2, but get rid of it for NSDL-C completely. We could think of adding some more automated 
resource handling logic in the future, but not for a first release.  


Bugs fixes and improvements made to libCoap in the nsdl-c-simple project:

- The msg_id field of the packet header structure was not being set properly. Fixed this so that the parser and builder uses the msg_id 
from the packet header structure. Removed the unnecessary msg_id function call parameter. 

- Called sn_linked_list_init(sn_coap_protocol_malloc, sn_coap_protocol_free); from sn_coap_protocol_init() as this otherwise is easily left uninitialized by a developer.

- Upgraded the library to the latest coap-09, observe-04 and block-08 specifications.

- Added simple RD registration, update and deregistration functions to libCoap directly. 

- Fixed location-path and location-query parsing not inserting / and & characters.

- New sn_coap_packet_debug() added to libCoap for easy packet inspection in applications.

- New sn_coap_build_response() to help simplify the creation of a response header structure when handling a request.

- Added CoAP content-type defines to coap_header.h


Suggested improvements for libCoap and bugs identified:

- BUG: Parsing fails on GET / request.

- Limitation: sn_coap_build_response() does not set the msg_id when the response needs to be a NON. Move to coap_protocol in order to take advantage of the global MID there?


TODOs removed for code release:

sn_coap_protocol_ietf_draft_09.c

/* TODO: How resending failure is told to message creator? */
/* TODO: How Compiler switches for compiling just Builder and Parser are managed? */




